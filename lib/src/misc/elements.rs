use std::fmt::{Display, Formatter};
use std::str::FromStr;

use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, Serialize, Deserialize)]
pub enum Element {
    H,
    He,
    Li,
    Be,
    B,
    C,
    N,
    O,
    F,
    Ne,
    Na,
    Mg,
    Al,
    Si,
    P,
    S,
    Cl,
    Ar,
    K,
    Ca,
    Sc,
    Ti,
    V,
    Cr,
    Mn,
    Fe,
    Co,
    Ni,
    Cu,
    Zn,
    Ga,
    Ge,
    As,
    Se,
    Br,
    Kr,
    Rb,
    Sr,
    Y,
    Zr,
    Nb,
    Mo,
    Tc,
    Ru,
    Rh,
    Pd,
    Ag,
    Cd,
    In,
    Sn,
    Sb,
    Te,
    I,
    Xe,
    Cs,
    Ba,
    La,
    Ce,
    Pr,
    Nd,
    Pm,
    Sm,
    Eu,
    Gd,
    Tb,
    Dy,
    Ho,
    Er,
    Tm,
    Yb,
    Lu,
    Hf,
    Ta,
    W,
    Re,
    Os,
    Ir,
    Pt,
    Au,
    Hg,
    Tl,
    Pb,
    Bi,
    Po,
    At,
    Rn,
    Fr,
    Ra,
    Ac,
    Th,
    Pa,
    U,
    Np,
    Pu,
    Am,
    Cm,
    Bk,
    Cf,
    Es,
    Fm,
    Md,
    No,
    Lr,
    Rf,
    Db,
    Sg,
    Bh,
    Hs,
    Mt,
    Ds,
    Rg,
    Cn,
    Nh,
    Fl,
    Mc,
    Lv,
    Ts,
    Og,
}

impl Element {
    pub fn atomic_number(&self) -> u8 {
        match self {
            Element::H => 1,
            Element::He => 2,
            Element::Li => 3,
            Element::Be => 4,
            Element::B => 5,
            Element::C => 6,
            Element::N => 7,
            Element::O => 8,
            Element::F => 9,
            Element::Ne => 10,
            Element::Na => 11,
            Element::Mg => 12,
            Element::Al => 13,
            Element::Si => 14,
            Element::P => 15,
            Element::S => 16,
            Element::Cl => 17,
            Element::Ar => 18,
            Element::K => 19,
            Element::Ca => 20,
            Element::Sc => 21,
            Element::Ti => 22,
            Element::V => 23,
            Element::Cr => 24,
            Element::Mn => 25,
            Element::Fe => 26,
            Element::Co => 27,
            Element::Ni => 28,
            Element::Cu => 29,
            Element::Zn => 30,
            Element::Ga => 31,
            Element::Ge => 32,
            Element::As => 33,
            Element::Se => 34,
            Element::Br => 35,
            Element::Kr => 36,
            Element::Rb => 37,
            Element::Sr => 38,
            Element::Y => 39,
            Element::Zr => 40,
            Element::Nb => 41,
            Element::Mo => 42,
            Element::Tc => 43,
            Element::Ru => 44,
            Element::Rh => 45,
            Element::Pd => 46,
            Element::Ag => 47,
            Element::Cd => 48,
            Element::In => 49,
            Element::Sn => 50,
            Element::Sb => 51,
            Element::Te => 52,
            Element::I => 53,
            Element::Xe => 54,
            Element::Cs => 55,
            Element::Ba => 56,
            Element::La => 57,
            Element::Ce => 58,
            Element::Pr => 59,
            Element::Nd => 60,
            Element::Pm => 61,
            Element::Sm => 62,
            Element::Eu => 63,
            Element::Gd => 64,
            Element::Tb => 65,
            Element::Dy => 66,
            Element::Ho => 67,
            Element::Er => 68,
            Element::Tm => 69,
            Element::Yb => 70,
            Element::Lu => 71,
            Element::Hf => 72,
            Element::Ta => 73,
            Element::W => 74,
            Element::Re => 75,
            Element::Os => 76,
            Element::Ir => 77,
            Element::Pt => 78,
            Element::Au => 79,
            Element::Hg => 80,
            Element::Tl => 81,
            Element::Pb => 82,
            Element::Bi => 83,
            Element::Po => 84,
            Element::At => 85,
            Element::Rn => 86,
            Element::Fr => 87,
            Element::Ra => 88,
            Element::Ac => 89,
            Element::Th => 90,
            Element::Pa => 91,
            Element::U => 92,
            Element::Np => 93,
            Element::Pu => 94,
            Element::Am => 95,
            Element::Cm => 96,
            Element::Bk => 97,
            Element::Cf => 98,
            Element::Es => 99,
            Element::Fm => 100,
            Element::Md => 101,
            Element::No => 102,
            Element::Lr => 103,
            Element::Rf => 104,
            Element::Db => 105,
            Element::Sg => 106,
            Element::Bh => 107,
            Element::Hs => 108,
            Element::Mt => 109,
            Element::Ds => 110,
            Element::Rg => 111,
            Element::Cn => 112,
            Element::Nh => 113,
            Element::Fl => 114,
            Element::Mc => 115,
            Element::Lv => 116,
            Element::Ts => 117,
            Element::Og => 118,
        }
    }

    pub fn name(&self) -> &'static str {
        match self {
            Element::H => "Hydrogen",
            Element::He => "Helium",
            Element::Li => "Lithium",
            Element::Be => "Beryllium",
            Element::B => "Boron",
            Element::C => "Carbon",
            Element::N => "Nitrogen",
            Element::O => "Oxygen",
            Element::F => "Fluoride",
            Element::Ne => "Neon",
            Element::Na => "Sodium",
            Element::Mg => "Magnesium",
            Element::Al => "Aluminum",
            Element::Si => "Silicon",
            Element::P => "Phosphorus",
            Element::S => "Sulfur",
            Element::Cl => "Chlorine",
            Element::Ar => "Argon",
            Element::K => "Potassium",
            Element::Ca => "Calcium",
            Element::Sc => "Scandium",
            Element::Ti => "Titanium",
            Element::V => "Vanadium",
            Element::Cr => "Chromium",
            Element::Mn => "Manganese",
            Element::Fe => "Iron",
            Element::Co => "Cobalt",
            Element::Ni => "Nickel",
            Element::Cu => "Copper",
            Element::Zn => "Zinc",
            Element::Ga => "Gallium",
            Element::Ge => "Germanium",
            Element::As => "Arsenic",
            Element::Se => "Selenium",
            Element::Br => "Bromine",
            Element::Kr => "Krypton",
            Element::Rb => "Rubidium",
            Element::Sr => "Strontium",
            Element::Y => "Yttrium",
            Element::Zr => "Zirconium",
            Element::Nb => "Niobium",
            Element::Mo => "Molybdenum",
            Element::Tc => "Technetium",
            Element::Ru => "Ruthenium",
            Element::Rh => "Rhodium",
            Element::Pd => "Palladium",
            Element::Ag => "Silver",
            Element::Cd => "Cadmium",
            Element::In => "Indium",
            Element::Sn => "Tin",
            Element::Sb => "Antimony",
            Element::Te => "Tellurium",
            Element::I => "Iodine",
            Element::Xe => "Xenon",
            Element::Cs => "Cesium",
            Element::Ba => "Barium",
            Element::La => "Lanthanum",
            Element::Ce => "Cerium",
            Element::Pr => "Praseodymium",
            Element::Nd => "Neodymium",
            Element::Pm => "Promethium",
            Element::Sm => "Samarium",
            Element::Eu => "Europium",
            Element::Gd => "Gadolinium",
            Element::Tb => "Terbium",
            Element::Dy => "Dysprosium",
            Element::Ho => "Holmium",
            Element::Er => "Erbium",
            Element::Tm => "Thulium",
            Element::Yb => "Ytterbium",
            Element::Lu => "Lutetium",
            Element::Hf => "Hafnium",
            Element::Ta => "Tantalum",
            Element::W => "Tungsten",
            Element::Re => "Rhenium",
            Element::Os => "Osmium",
            Element::Ir => "Iridium",
            Element::Pt => "Platinum",
            Element::Au => "Gold",
            Element::Hg => "Mercury",
            Element::Tl => "Thallium",
            Element::Pb => "Lead",
            Element::Bi => "Bismuth",
            Element::Po => "Polonium",
            Element::At => "Astatine",
            Element::Rn => "Radon",
            Element::Fr => "Francium",
            Element::Ra => "Radium",
            Element::Ac => "Actinium",
            Element::Th => "Thorium",
            Element::Pa => "Protactinium",
            Element::U => "Uranium",
            Element::Np => "Neptunium",
            Element::Pu => "Plutonium",
            Element::Am => "Americium",
            Element::Cm => "Curium",
            Element::Bk => "Berkelium",
            Element::Cf => "Californium",
            Element::Es => "Einsteinium",
            Element::Fm => "Fermium",
            Element::Md => "Mendelevium",
            Element::No => "Nobelium",
            Element::Lr => "Lawrencium",
            Element::Rf => "Rutherfordium",
            Element::Db => "Dubnium",
            Element::Sg => "Seaborgium",
            Element::Bh => "Bohrium",
            Element::Hs => "Hassium",
            Element::Mt => "Meitnerium",
            Element::Ds => "Darmstadtium",
            Element::Rg => "Roentgenium",
            Element::Cn => "Copernicium",
            Element::Nh => "Nihonium",
            Element::Fl => "Flerovium",
            Element::Mc => "Moscovium",
            Element::Lv => "Livermorium",
            Element::Ts => "Tennessine",
            Element::Og => "Oganesson",
        }
    }

    pub fn mass(&self) -> f32 {
        match self {
            Element::H => 1.008,
            Element::He => 4.003,
            Element::Li => 6.941,
            Element::Be => 9.012,
            Element::B => 10.810,
            Element::C => 12.011,
            Element::N => 14.007,
            Element::O => 15.999,
            Element::F => 18.998,
            Element::Ne => 20.179,
            _ => todo!(),
        }
    }

    // fn core_electrons(&self) -> u8 {
    //     //     1:2    => 0,
    //     //     3:10   => 2,
    //     //     11:18  => 10,
    //     //     19:36  => 18,
    //     //     37:54  => 36,
    //     //     55:86  => 54,
    //     //     87:118 => 86
    //     0
    // }
}

impl Display for Element {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        write!(
            f,
            "{:2}",
            match self {
                Element::H => "H",
                Element::He => "He",
                Element::Li => "Li",
                Element::Be => "Be",
                Element::B => "B",
                Element::C => "C",
                Element::N => "N",
                Element::O => "O",
                Element::F => "F",
                Element::Ne => "Ne",
                Element::Na => "Na",
                Element::Mg => "Mg",
                Element::Al => "Al",
                Element::Si => "Si",
                Element::P => "P",
                Element::S => "S",
                Element::Cl => "Cl",
                Element::Ar => "Ar",
                Element::K => "K",
                Element::Ca => "Ca",
                Element::Sc => "Sc",
                Element::Ti => "Ti",
                Element::V => "V",
                Element::Cr => "Cr",
                Element::Mn => "Mn",
                Element::Fe => "Fe",
                Element::Co => "Co",
                Element::Ni => "Ni",
                Element::Cu => "Cu",
                Element::Zn => "Zn",
                Element::Ga => "Ga",
                Element::Ge => "Ge",
                Element::As => "As",
                Element::Se => "Se",
                Element::Br => "Br",
                Element::Kr => "Kr",
                Element::Rb => "Rb",
                Element::Sr => "Sr",
                Element::Y => "Y",
                Element::Zr => "Zr",
                Element::Nb => "Nb",
                Element::Mo => "Mo",
                Element::Tc => "Tc",
                Element::Ru => "Ru",
                Element::Rh => "Rh",
                Element::Pd => "Pd",
                Element::Ag => "Ag",
                Element::Cd => "Cd",
                Element::In => "In",
                Element::Sn => "Sn",
                Element::Sb => "Sb",
                Element::Te => "Te",
                Element::I => "I",
                Element::Xe => "Xe",
                Element::Cs => "Cs",
                Element::Ba => "Ba",
                Element::La => "La",
                Element::Ce => "Ce",
                Element::Pr => "Pr",
                Element::Nd => "Nd",
                Element::Pm => "Pm",
                Element::Sm => "Sm",
                Element::Eu => "Eu",
                Element::Gd => "Gd",
                Element::Tb => "Tb",
                Element::Dy => "Dy",
                Element::Ho => "Ho",
                Element::Er => "Er",
                Element::Tm => "Tm",
                Element::Yb => "Yb",
                Element::Lu => "Lu",
                Element::Hf => "Hf",
                Element::Ta => "Ta",
                Element::W => "W",
                Element::Re => "Re",
                Element::Os => "Os",
                Element::Ir => "Ir",
                Element::Pt => "Pt",
                Element::Au => "Au",
                Element::Hg => "Hg",
                Element::Tl => "Tl",
                Element::Pb => "Pb",
                Element::Bi => "Bi",
                Element::Po => "Po",
                Element::At => "At",
                Element::Rn => "Rn",
                Element::Fr => "Fr",
                Element::Ra => "Ra",
                Element::Ac => "Ac",
                Element::Th => "Th",
                Element::Pa => "Pa",
                Element::U => "U",
                Element::Np => "Np",
                Element::Pu => "Pu",
                Element::Am => "Am",
                Element::Cm => "Cm",
                Element::Bk => "Bk",
                Element::Cf => "Cf",
                Element::Es => "Es",
                Element::Fm => "Fm",
                Element::Md => "Md",
                Element::No => "No",
                Element::Lr => "Lr",
                Element::Rf => "Rf",
                Element::Db => "Db",
                Element::Sg => "Sg",
                Element::Bh => "Bh",
                Element::Hs => "Hs",
                Element::Mt => "Mt",
                Element::Ds => "Ds",
                Element::Rg => "Rg",
                Element::Cn => "Cn",
                Element::Nh => "Nh",
                Element::Fl => "Fl",
                Element::Mc => "Mc",
                Element::Lv => "Lv",
                Element::Ts => "Ts",
                Element::Og => "Og",
            }
        )
    }
}

impl FromStr for Element {
    type Err = &'static str;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "H" => Ok(Element::H),
            "He" => Ok(Element::He),
            "Li" => Ok(Element::Li),
            "Be" => Ok(Element::Be),
            "B" => Ok(Element::B),
            "C" => Ok(Element::C),
            "N" => Ok(Element::N),
            "O" => Ok(Element::O),
            "F" => Ok(Element::F),
            "Ne" => Ok(Element::Ne),
            "Na" => Ok(Element::Na),
            "Mg" => Ok(Element::Mg),
            "Al" => Ok(Element::Al),
            "Si" => Ok(Element::Si),
            "P" => Ok(Element::P),
            "S" => Ok(Element::S),
            "Cl" => Ok(Element::Cl),
            "Ar" => Ok(Element::Ar),
            "K" => Ok(Element::K),
            "Ca" => Ok(Element::Ca),
            "Sc" => Ok(Element::Sc),
            "Ti" => Ok(Element::Ti),
            "V" => Ok(Element::V),
            "Cr" => Ok(Element::Cr),
            "Mn" => Ok(Element::Mn),
            "Fe" => Ok(Element::Fe),
            "Co" => Ok(Element::Co),
            "Ni" => Ok(Element::Ni),
            "Cu" => Ok(Element::Cu),
            "Zn" => Ok(Element::Zn),
            "Ga" => Ok(Element::Ga),
            "Ge" => Ok(Element::Ge),
            "As" => Ok(Element::As),
            "Se" => Ok(Element::Se),
            "Br" => Ok(Element::Br),
            "Kr" => Ok(Element::Kr),
            "Rb" => Ok(Element::Rb),
            "Sr" => Ok(Element::Sr),
            "Y" => Ok(Element::Y),
            "Zr" => Ok(Element::Zr),
            "Nb" => Ok(Element::Nb),
            "Mo" => Ok(Element::Mo),
            "Tc" => Ok(Element::Tc),
            "Ru" => Ok(Element::Ru),
            "Rh" => Ok(Element::Rh),
            "Pd" => Ok(Element::Pd),
            "Ag" => Ok(Element::Ag),
            "Cd" => Ok(Element::Cd),
            "In" => Ok(Element::In),
            "Sn" => Ok(Element::Sn),
            "Sb" => Ok(Element::Sb),
            "Te" => Ok(Element::Te),
            "I" => Ok(Element::I),
            "Xe" => Ok(Element::Xe),
            "Cs" => Ok(Element::Cs),
            "Ba" => Ok(Element::Ba),
            "La" => Ok(Element::La),
            "Ce" => Ok(Element::Ce),
            "Pr" => Ok(Element::Pr),
            "Nd" => Ok(Element::Nd),
            "Pm" => Ok(Element::Pm),
            "Sm" => Ok(Element::Sm),
            "Eu" => Ok(Element::Eu),
            "Gd" => Ok(Element::Gd),
            "Tb" => Ok(Element::Tb),
            "Dy" => Ok(Element::Dy),
            "Ho" => Ok(Element::Ho),
            "Er" => Ok(Element::Er),
            "Tm" => Ok(Element::Tm),
            "Yb" => Ok(Element::Yb),
            "Lu" => Ok(Element::Lu),
            "Hf" => Ok(Element::Hf),
            "Ta" => Ok(Element::Ta),
            "W" => Ok(Element::W),
            "Re" => Ok(Element::Re),
            "Os" => Ok(Element::Os),
            "Ir" => Ok(Element::Ir),
            "Pt" => Ok(Element::Pt),
            "Au" => Ok(Element::Au),
            "Hg" => Ok(Element::Hg),
            "Tl" => Ok(Element::Tl),
            "Pb" => Ok(Element::Pb),
            "Bi" => Ok(Element::Bi),
            "Po" => Ok(Element::Po),
            "At" => Ok(Element::At),
            "Rn" => Ok(Element::Rn),
            "Fr" => Ok(Element::Fr),
            "Ra" => Ok(Element::Ra),
            "Ac" => Ok(Element::Ac),
            "Th" => Ok(Element::Th),
            "Pa" => Ok(Element::Pa),
            "U" => Ok(Element::U),
            "Np" => Ok(Element::Np),
            "Pu" => Ok(Element::Pu),
            "Am" => Ok(Element::Am),
            "Cm" => Ok(Element::Cm),
            "Bk" => Ok(Element::Bk),
            "Cf" => Ok(Element::Cf),
            "Es" => Ok(Element::Es),
            "Fm" => Ok(Element::Fm),
            "Md" => Ok(Element::Md),
            "No" => Ok(Element::No),
            "Lr" => Ok(Element::Lr),
            "Rf" => Ok(Element::Rf),
            "Db" => Ok(Element::Db),
            "Sg" => Ok(Element::Sg),
            "Bh" => Ok(Element::Bh),
            "Hs" => Ok(Element::Hs),
            "Mt" => Ok(Element::Mt),
            "Ds" => Ok(Element::Ds),
            "Rg" => Ok(Element::Rg),
            "Cn" => Ok(Element::Cn),
            "Nh" => Ok(Element::Nh),
            "Fl" => Ok(Element::Fl),
            "Mc" => Ok(Element::Mc),
            "Lv" => Ok(Element::Lv),
            "Ts" => Ok(Element::Ts),
            "Og" => Ok(Element::Og),
            _ => Err("Unknown element symbol"),
        }
    }
}

#[cfg(test)]
mod tests {
    use crate::misc::elements::Element;

    // #[test]
    // fn serialize() {
    //     assert_eq!(toml::to_string(&Element::Bi).unwrap(), r#""Bi""#);
    // }

    // #[test]
    // fn deserialize() {
    //     assert_eq!(toml::from_str::<Element>(r#""Bi""#).unwrap(), Element::Bi);
    // }

    #[test]
    fn name() {
        assert_eq!(Element::Sn.name(), "Tin");
    }

    #[test]
    fn display() {
        assert_eq!(Element::Sn.to_string(), "Sn");
    }

    #[test]
    fn from_str() {
        use std::str::FromStr;

        assert_eq!(Element::from_str("Sn"), Ok(Element::Sn));
        assert_eq!(Element::from_str("foo"), Err("Unknown element symbol"));
    }
}
